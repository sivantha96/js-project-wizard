{"version":3,"sources":["assets/images/logo.svg","scripts/express/index.js","containers/Home/index.js","utils/index.js","App.js","index.js"],"names":["getExpressScriptFile","projectName","projectDescription","projectAuthor","Promise","resolve","reject","url","process","REACT_APP_BASE_URL","fetch","encodeURI","then","res","text","catch","err","Home","useState","type","setType","name","setName","author","setAuthor","description","setDescription","isLoading","setLoading","nameError","setNameError","authorError","setAuthorError","descriptionError","setDescriptionError","fileName","setFileName","className","Header","as","image","logo","content","Container","Form","onSubmit","mainFile","tempFileName","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateRandomId","element","document","createElement","href","window","URL","createObjectURL","Blob","download","body","appendChild","click","alert","loading","Select","fluid","label","options","key","value","onChange","e","Group","widths","Input","placeholder","error","pointing","TextArea","Button","primary","color","Segment","inverted","Popup","on","pinned","trigger","onClick","navigator","clipboard","writeText","icon","Icon","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.79b925ba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.1e29a291.svg\";","const getExpressScriptFile = (\n  projectName,\n  projectDescription,\n  projectAuthor\n) => {\n  return new Promise((resolve, reject) => {\n    const url = `${process.env.REACT_APP_BASE_URL}/express?name=${projectName}&description=${projectDescription}&author=${projectAuthor}`;\n    fetch(encodeURI(url))\n      .then((res) => {\n        res.text().then((text) => {\n          resolve(text);\n        });\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport default getExpressScriptFile;\n","import React, { useState } from 'react';\nimport './index.css';\nimport logo from '../../assets/images/logo.svg';\nimport {\n  Header,\n  Container,\n  Button,\n  Form,\n  Segment,\n  Icon,\n  Popup,\n} from 'semantic-ui-react';\nimport getExpressScriptFile from '../../scripts/express';\nimport { generateRandomId } from '../../utils';\n\nfunction Home() {\n  const [type, setType] = useState('express');\n  const [name, setName] = useState('');\n  const [author, setAuthor] = useState('');\n  const [description, setDescription] = useState('');\n  const [isLoading, setLoading] = useState(false);\n\n  const [nameError, setNameError] = useState(false);\n  const [authorError, setAuthorError] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(false);\n\n  const [fileName, setFileName] = useState(null);\n\n  const buttonClickHandler = () => {\n    setFileName(null);\n    setNameError(false);\n    setAuthorError(false);\n    setDescriptionError(false);\n\n    if (!name) {\n      setNameError(true);\n    }\n    if (!author) {\n      setAuthorError(true);\n    }\n    if (!description) {\n      setDescriptionError(true);\n    }\n\n    if (nameError || authorError || descriptionError) {\n      return null;\n    }\n\n    setLoading(true);\n    getExpressScriptFile(name, description, author)\n      .then((mainFile) => {\n        const tempFileName = generateRandomId(6);\n        setFileName(tempFileName);\n        const element = document.createElement('a');\n        element.href = window.URL.createObjectURL(new Blob([mainFile]));\n        element.download = `${tempFileName}.js`;\n        document.body.appendChild(element);\n        element.click();\n        setName('')\n        setAuthor('')\n        setDescription('')\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        window.alert('Oops! Something went wrong. Please try again in a while.')\n      });\n  };\n\n  const projectTypes = [{ key: 'express', text: 'Express', value: 'express' }];\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <Header as=\"h2\" image={logo} content=\"JS Project Wizard\" />\n      </header>\n      <div className=\"left-content\"></div>\n      <main className=\"content\">\n        <Container>\n          <Form onSubmit={buttonClickHandler} loading={isLoading}>\n            <Form.Select\n              fluid\n              label=\"Project Type\"\n              options={projectTypes}\n              value={type}\n              onChange={(e, { value }) => {\n                setType(value);\n              }}\n            />\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"Project Name\"\n                placeholder=\"express-app\"\n                value={name}\n                onChange={(e, { value }) => {\n                  setName(value);\n                }}\n                error={\n                  nameError\n                    ? {\n                        content: 'Please enter a project name',\n                        pointing: 'above',\n                      }\n                    : false\n                }\n              />\n              <Form.Input\n                fluid\n                label=\"Author\"\n                placeholder=\"John Doe\"\n                value={author}\n                onChange={(e, { value }) => {\n                  setAuthor(value);\n                }}\n                error={\n                  authorError\n                    ? {\n                        content: 'Please enter the author name',\n                        pointing: 'above',\n                      }\n                    : false\n                }\n              />\n            </Form.Group>\n            <Form.TextArea\n              label=\"Project Description\"\n              placeholder=\"Add a brief description about your project\"\n              value={description}\n              onChange={(e, { value }) => {\n                setDescription(value);\n              }}\n              error={\n                descriptionError\n                  ? {\n                      content: 'Please enter a description',\n                      pointing: 'above',\n                    }\n                  : false\n              }\n            />\n            <Form.Button className=\"my-3\" primary>\n              Generate Project\n            </Form.Button>\n          </Form>\n          {fileName && (\n            <>\n              <Header as=\"h5\" color={'green'}>\n                Generation complete. Create a new folder, move the downloaded\n                file into the folder and run the following command on a terminal\n                inside of that folder\n              </Header>\n\n              <Segment\n                className=\"flex justify-between items-center mt-3 font-mono\"\n                inverted\n              >\n                npm i async && node {fileName}.js\n                <Popup\n                  content=\"Copied!\"\n                  on=\"click\"\n                  pinned\n                  trigger={\n                    <Button\n                      onClick={() => {\n                        navigator.clipboard.writeText(\n                          `npm i async && node ${fileName}.js`\n                        );\n                      }}\n                      icon\n                    >\n                      <Icon name=\"copy\" />\n                    </Button>\n                  }\n                />\n              </Segment>\n            </>\n          )}\n        </Container>\n      </main>\n      <div className=\"right-content\"></div>\n      <footer className=\"footer\"></footer>\n    </div>\n  );\n}\n\nexport default Home;\n","export const generateRandomId = (length) => {\n  var result = '';\n  var characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './containers/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/js-project-wizard/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}