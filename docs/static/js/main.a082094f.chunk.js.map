{"version":3,"sources":["assets/images/logo.svg","containers/Home/constants/index.js","containers/Home/utils/index.js","containers/Home/views/ProjectDetailsView.js","containers/Home/views/ExpressView.js","containers/Home/views/RNView.js","containers/Home/views/SetupView.js","containers/Home/index.js","utils/index.js","services/index.js","App.js","index.js"],"names":["PROJECT_TYPES","DB_TYPES","PROJECT_TYPES_ARRAY","key","text","value","DB_TYPES_ARRAY","REGEX_CAMEL_CASE","REGEX_DASH_CASE","getNameError","name","projectType","test","getProjectNamePlaceholder","ProjectDetailsView","onChange","useState","error","placeholder","changed","nameInfo","setNameInfo","authorInfo","setAuthorInfo","descriptionInfo","setDescriptionInfo","useEffect","isValid","author","description","console","log","Form","Group","widths","Input","fluid","label","e","content","pointing","TextArea","memo","ExpressView","dataBaseType","setDataBaseType","dataBaseNameInfo","setDataBaseNameInfo","dataBaseName","Select","options","disabled","RNView","hasReactNavigation","setHasReactNavigation","hasRedux","setHasRedux","hasVectorIcons","setHasVectorIcons","className","Field","Popup","on","href","target","trigger","Icon","Checkbox","toggle","checked","SetupView","heading","code","Header","as","color","Segment","inverted","pinned","Button","onClick","navigator","clipboard","writeText","icon","Home","type","setType","isLoading","setLoading","projectDetails","setProjectDetails","expressDetails","setExpressDetails","rnDetails","setRNDetails","fileName","setFileName","downloadFile","file","tempFileName","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateRandomId","element","document","createElement","window","URL","createObjectURL","Blob","download","body","appendChild","click","image","logo","Container","onSubmit","data","dbType","dbName","Promise","resolve","reject","url","process","fetch","method","headers","JSON","stringify","then","res","catch","err","mainFile","getRNScriptFile","loading","primary","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a082094f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.1e29a291.svg\";","export const PROJECT_TYPES = {\n  REACT_NATIVE: 'rn',\n  EXPRESS: 'express',\n};\n\nexport const DB_TYPES = {\n  NONE: 'none',\n  MONGO_DB: 'mongo',\n};\n\nexport const PROJECT_TYPES_ARRAY = [\n  {\n    key: PROJECT_TYPES.EXPRESS,\n    text: 'Express',\n    value: PROJECT_TYPES.EXPRESS,\n  },\n  {\n    key: PROJECT_TYPES.REACT_NATIVE,\n    text: 'React Native',\n    value: PROJECT_TYPES.REACT_NATIVE,\n  },\n];\n\nexport const DB_TYPES_ARRAY = [\n  {\n    key: DB_TYPES.NONE,\n    text: 'None',\n    value: DB_TYPES.NONE,\n  },\n  {\n    key: DB_TYPES.MONGO_DB,\n    text: 'MongoDB',\n    value: DB_TYPES.MONGO_DB,\n  },\n];\n\nexport const REGEX_CAMEL_CASE = /^[A-Z][a-zA-Z]*$/;\nexport const REGEX_DASH_CASE = /^[a-zA-Z-]*$/;\n","import { PROJECT_TYPES, REGEX_CAMEL_CASE, REGEX_DASH_CASE } from '../constants';\n\nexport const getNameError = (name, projectType) => {\n  if (!name) {\n    return 'Project name is required';\n  }\n\n  // Camel Case\n  if (projectType === PROJECT_TYPES.REACT_NATIVE) {\n    const isValid = REGEX_CAMEL_CASE.test(name);\n    if (!isValid) {\n      return 'Project name should be in valid Camel Case format. eg: ProjectName';\n    } else {\n      return null;\n    }\n  }\n\n  // Dash Case\n  const isValid = REGEX_DASH_CASE.test(name);\n  if (!isValid) {\n    return 'Project name should be in valid Dash Case format. eg: project-name';\n  } else {\n    return null;\n  }\n};\n\nexport const getProjectNamePlaceholder = (projectType) => {\n  if (projectType === PROJECT_TYPES.REACT_NATIVE) {\n    return 'MyAwesomeApp';\n  }\n  return 'my-awesome-app';\n};\n","import React, { useState, useEffect, memo } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { getNameError, getProjectNamePlaceholder } from '../utils';\n\nconst ProjectDetailsView = ({ projectType, onChange }) => {\n  const [nameInfo, setNameInfo] = useState({\n    value: '',\n    error: null,\n    placeholder: getProjectNamePlaceholder(projectType),\n    changed: false,\n  });\n\n  const [authorInfo, setAuthorInfo] = useState({\n    value: '',\n    error: null,\n  });\n\n  const [descriptionInfo, setDescriptionInfo] = useState({\n    value: '',\n    error: null,\n  });\n\n  useEffect(() => {\n    if (projectType) {\n      setNameInfo({\n        value: nameInfo.value,\n        error: nameInfo.changed\n          ? getNameError(nameInfo.value, projectType)\n          : null,\n        placeholder: getProjectNamePlaceholder(projectType),\n        changed: nameInfo.changed,\n      });\n    } else {\n      // resetting\n      setNameInfo({\n        value: '',\n        error: null,\n        placeholder: getProjectNamePlaceholder(projectType),\n        changed: false,\n      });\n      setAuthorInfo({\n        value: '',\n        error: null,\n      });\n      setDescriptionInfo({\n        value: '',\n        error: null,\n      });\n    }\n  }, [projectType]);\n\n  useEffect(() => {\n    const isValid =\n      !nameInfo.error && !authorInfo.error && !descriptionInfo.error;\n    onChange({\n      isValid,\n      name: nameInfo.value,\n      author: authorInfo.value,\n      description: descriptionInfo.value,\n    });\n  }, [nameInfo, authorInfo, descriptionInfo, onChange]);\n\n  const onChangeNameHandler = (e, { value }) => {\n    setNameInfo({\n      value,\n      error: nameInfo.changed ? getNameError(value, projectType) : null,\n      placeholder: nameInfo.placeholder,\n      changed: true,\n    });\n  };\n\n  const onChangeDescriptionHandler = (e, { value }) => {\n    const error = value ? null : 'Project Description is required';\n    setDescriptionInfo({ value, error });\n  };\n\n  const onChangeAuthorHandler = (e, { value }) => {\n    const error = value ? null : 'Author is required';\n    setAuthorInfo({ value, error });\n  };\n\n  console.log('RENDERED DETAILS VIEW');\n\n  return (\n    <>\n      <Form.Group widths=\"equal\">\n        <Form.Input\n          fluid\n          label=\"Project Name\"\n          placeholder={nameInfo.placeholder}\n          value={nameInfo.value}\n          onChange={onChangeNameHandler}\n          error={\n            nameInfo.error\n              ? {\n                  content: nameInfo.error,\n                  pointing: 'above',\n                }\n              : false\n          }\n        />\n        <Form.Input\n          fluid\n          label=\"Author\"\n          placeholder=\"John Doe\"\n          value={authorInfo.value}\n          onChange={onChangeAuthorHandler}\n          error={\n            authorInfo.error\n              ? {\n                  content: authorInfo.error,\n                  pointing: 'above',\n                }\n              : false\n          }\n        />\n      </Form.Group>\n      <Form.TextArea\n        label=\"Project Description\"\n        placeholder=\"Add a brief description about your project\"\n        value={descriptionInfo.value}\n        onChange={onChangeDescriptionHandler}\n        error={\n          descriptionInfo.error\n            ? {\n                content: descriptionInfo.error,\n                pointing: 'above',\n              }\n            : false\n        }\n      />\n    </>\n  );\n};\nProjectDetailsView.propTypes = {\n  projectType: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default memo(ProjectDetailsView);\n","import React, { useState, useEffect, memo } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { DB_TYPES_ARRAY } from '../constants';\n\nconst ExpressView = ({ onChange }) => {\n  const [dataBaseType, setDataBaseType] = useState('none');\n\n  const [dataBaseNameInfo, setDataBaseNameInfo] = useState({\n    value: '',\n    error: null,\n  });\n\n  useEffect(() => {\n    const isValid = !dataBaseNameInfo.error;\n    onChange({\n      isValid,\n      dataBaseType,\n      dataBaseName: dataBaseNameInfo.value,\n    });\n  }, [dataBaseType, dataBaseNameInfo, onChange]);\n\n  const onChangeDataBaseTypeHandler = (e, { value }) => {\n    setDataBaseType(value);\n  };\n\n  const onChangeDataBaseNameHandler = (e, { value }) => {\n    setDataBaseNameInfo({\n      value,\n      error: value ? null : 'Database name is required',\n    });\n  };\n\n  return (\n    <>\n      <Form.Group widths=\"equal\">\n        <Form.Select\n          fluid\n          label=\"Database\"\n          options={DB_TYPES_ARRAY}\n          value={dataBaseType}\n          onChange={onChangeDataBaseTypeHandler}\n        />\n        <Form.Input\n          disabled={dataBaseType === 'none'}\n          fluid\n          label=\"Database Name\"\n          placeholder=\"express-app-db\"\n          value={dataBaseNameInfo.value}\n          onChange={onChangeDataBaseNameHandler}\n          error={\n            dataBaseNameInfo.error\n              ? {\n                  content: dataBaseNameInfo.error,\n                  pointing: 'above',\n                }\n              : false\n          }\n        />\n      </Form.Group>\n    </>\n  );\n};\n\nExpressView.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport default memo(ExpressView);\n","import React, { useState, useEffect, memo } from 'react';\nimport { Checkbox, Form, Icon, Popup } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst RNView = ({ onChange }) => {\n  const [hasReactNavigation, setHasReactNavigation] = useState(false);\n  const [hasRedux, setHasRedux] = useState(false);\n  const [hasVectorIcons, setHasVectorIcons] = useState(false);\n\n  useEffect(() => {\n    onChange({\n      isValid: true,\n      hasReactNavigation,\n      hasRedux,\n      hasVectorIcons,\n    });\n  }, [onChange, hasVectorIcons, hasReactNavigation, hasRedux]);\n\n  return (\n    <div>\n      <div className=\"grid grid-cols-2\">\n        <Form.Field>\n          <label>\n            {'React Navigation   '}\n            <Popup\n              on=\"click\"\n              content={\n                <span>\n                  This will include all the basic dependencies for a stack\n                  navigator, navigation utility functions, clean project\n                  structure the initial configuration recommended by the{' '}\n                  <a href=\"https://reactnavigation.org\" target=\"_blank\">\n                    Official React Navigation docs\n                  </a>\n                </span>\n              }\n              trigger={<Icon className=\"cursor-pointer\" name=\"info circle\" />}\n            />\n          </label>\n        </Form.Field>\n        <Checkbox\n          toggle\n          checked={hasReactNavigation}\n          onChange={(e, { checked }) => {\n            setHasReactNavigation(checked);\n          }}\n        />\n      </div>\n\n      <div className=\"grid grid-cols-2 align-center\">\n        <Form.Field>\n          <label>\n            {'Redux   '}\n            <Popup\n              on=\"click\"\n              content={\n                <span>\n                  This will include{' '}\n                  <a href=\"https://www.npmjs.com/package/redux\" target=\"_blank\">\n                    redux v4.1.2\n                  </a>\n                  ,{' '}\n                  <a\n                    href=\"https://www.npmjs.com/package/react-redux\"\n                    target=\"_blank\"\n                  >\n                    react-redux v7.2.6\n                  </a>\n                  ,{' '}\n                  <a\n                    href=\"https://www.npmjs.com/package/redux-saga\"\n                    target=\"_blank\"\n                  >\n                    redux-saga v1.1.3\n                  </a>\n                  , a clean project structure and initial configurations\n                </span>\n              }\n              trigger={<Icon className=\"cursor-pointer\" name=\"info circle\" />}\n            />\n          </label>\n        </Form.Field>\n        <Checkbox\n          toggle\n          checked={hasRedux}\n          onChange={(e, { checked }) => {\n            setHasRedux(checked);\n          }}\n        />\n      </div>\n\n      <div className=\"grid grid-cols-2\">\n        <Form.Field>\n          <label>\n            {'React Native Vector Icons   '}\n            <Popup\n              on=\"click\"\n              content={\n                <span>\n                  This will include the{' '}\n                  <a\n                    href=\"https://www.npmjs.com/package/react-native-vector-icons\"\n                    target=\"_blank\"\n                  >\n                    react-native-vector-icons v9.1.0\n                  </a>{' '}\n                  package and the configuration to work out of the box\n                </span>\n              }\n              trigger={<Icon className=\"cursor-pointer\" name=\"info circle\" />}\n            />\n          </label>\n        </Form.Field>\n        <Checkbox\n          toggle\n          checked={hasVectorIcons}\n          onChange={(e, { checked }) => {\n            setHasVectorIcons(checked);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nRNView.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport default memo(RNView);\n","import React from 'react';\nimport { Button, Header, Icon, Popup, Segment } from 'semantic-ui-react';\n\nexport const SetupView = ({ heading, code }) => {\n  return (\n    <div className=\"content\">\n      <Header as=\"h5\" color={'green'}>\n        {heading}\n      </Header>\n\n      <Segment\n        className=\"flex justify-between items-center mt-3 font-mono\"\n        inverted\n      >\n        {code}\n        <Popup\n          content=\"Copied!\"\n          on=\"click\"\n          pinned\n          trigger={\n            <Button\n              onClick={() => {\n                navigator.clipboard.writeText(code);\n              }}\n              icon\n            >\n              <Icon name=\"copy\" />\n            </Button>\n          }\n        />\n      </Segment>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './index.css';\nimport logo from '../../assets/images/logo.svg';\nimport { Header, Container, Form } from 'semantic-ui-react';\nimport { generateRandomId } from '../../utils';\nimport { PROJECT_TYPES, PROJECT_TYPES_ARRAY } from './constants';\nimport ProjectDetailsView from './views/ProjectDetailsView';\nimport ExpressView from './views/ExpressView';\nimport RNView from './views/RNView';\nimport { getExpressScriptFile, getRNScriptFile } from '../../services';\nimport { SetupView } from './views/SetupView';\n\nfunction Home() {\n  const [type, setType] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n\n  const [projectDetails, setProjectDetails] = useState({\n    isValid: false,\n    name: '',\n    author: '',\n    description: '',\n  });\n\n  const [expressDetails, setExpressDetails] = useState({\n    isValid: false,\n    dataBaseType: 'none',\n    dataBaseName: '',\n  });\n\n  const [rnDetails, setRNDetails] = useState({\n    isValid: false,\n    hasReactNavigation: false,\n    hasRedux: false,\n    hasVectorIcons: false,\n  });\n\n  const [fileName, setFileName] = useState(null);\n\n  const buttonClickHandler = () => {\n    if (!projectDetails.isValid) {\n      return;\n    }\n    setLoading(true);\n\n    let data;\n    switch (type) {\n      case PROJECT_TYPES.EXPRESS:\n        if (!expressDetails.isValid) {\n          return;\n        }\n\n        data = {\n          ...projectDetails,\n          dbType: expressDetails.dataBaseType,\n          dbName: expressDetails.dataBaseName,\n        };\n        getExpressScriptFile(data)\n          .then((mainFile) => {\n            downloadFile(mainFile);\n            setType(null);\n            setLoading(false);\n          })\n          .catch((err) => {\n            setLoading(false);\n          });\n        break;\n\n      case PROJECT_TYPES.REACT_NATIVE:\n        if (!rnDetails.isValid) {\n          return;\n        }\n\n        data = {\n          ...projectDetails,\n          ...rnDetails,\n        };\n        getRNScriptFile(data)\n          .then((mainFile) => {\n            downloadFile(mainFile);\n            setType(null);\n            setLoading(false);\n          })\n          .catch((err) => {\n            setLoading(false);\n          });\n        break;\n\n      default:\n        setLoading(false);\n        break;\n    }\n  };\n\n  const downloadFile = (file) => {\n    const tempFileName = generateRandomId(6);\n    setFileName(tempFileName);\n    const element = document.createElement('a');\n    element.href = window.URL.createObjectURL(new Blob([file]));\n    element.download = `${tempFileName}.js`;\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  const onChangeProjectTypeHandler = (e, { value }) => {\n    setFileName(null);\n    setType(value);\n  };\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <Header as=\"h2\" image={logo} content=\"JS Project Wizard\" />\n      </header>\n\n      <main className=\"content\">\n        <Container>\n          <SetupView\n            heading={\n              'If you are here the first time, run the following command before getting started to install the dependencies'\n            }\n            code={'npm install --prefix $HOME async'}\n          />\n          <Form\n            onSubmit={buttonClickHandler}\n            loading={isLoading}\n            className=\"my-10\"\n          >\n            <Form.Select\n              fluid\n              label=\"Project Type\"\n              options={PROJECT_TYPES_ARRAY}\n              value={type}\n              onChange={onChangeProjectTypeHandler}\n            />\n            {type && (\n              <>\n                <ProjectDetailsView\n                  projectType={type}\n                  onChange={setProjectDetails}\n                />\n                {type === PROJECT_TYPES.EXPRESS ? (\n                  <ExpressView onChange={setExpressDetails} />\n                ) : (\n                  <RNView onChange={setRNDetails} />\n                )}\n                <Form.Button className=\"my-3\" primary>\n                  Generate Project\n                </Form.Button>\n              </>\n            )}\n          </Form>\n          {fileName && (\n            <SetupView\n              heading={\n                'Generation complete. Move the downloaded file into where you want to initialize the project and run the following command.'\n              }\n              code={`node ${fileName}.js`}\n            />\n          )}\n        </Container>\n      </main>\n      <div className=\"right-content\"></div>\n      <footer className=\"footer\"></footer>\n    </div>\n  );\n}\n\nexport default Home;\n","export const generateRandomId = (length) => {\n  var result = '';\n  var characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport function addParamsToURL(url, params) {\n  if (params && Object.entries(params).length !== 0 && params.constructor === Object) {\n      let temp = url;\n      let count = 0;\n      for (let [key, value] of Object.entries(params)) {\n          const valEncoded = encodeURIComponent(value);\n          temp = temp + `${count === 0 ? '?' : '&'}${key}=${valEncoded}`;\n          count++;\n      }\n      return temp;\n  }\n  return url;\n}\n","export const getExpressScriptFile = (body) => {\n  return new Promise((resolve, reject) => {\n    let url = `${process.env.REACT_APP_BASE_URL}/express`;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    })\n      .then((res) => {\n        res.text().then((text) => {\n          resolve(text);\n        });\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const getRNScriptFile = (body) => {\n  console.log(body)\n  return new Promise((resolve, reject) => {\n    let url = `${process.env.REACT_APP_BASE_URL}/react-native`;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    })\n      .then((res) => {\n        res.text().then((text) => {\n          resolve(text);\n        });\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './containers/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/js-project-wizard/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}