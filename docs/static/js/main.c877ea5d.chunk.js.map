{"version":3,"sources":["assets/images/logo.svg","containers/Home/constants/index.js","containers/Home/utils/index.js","containers/Home/views/ProjectDetailsView.js","containers/Home/views/ExpressView.js","containers/Home/views/RNView.js","containers/Home/index.js","utils/index.js","services/index.js","App.js","index.js"],"names":["PROJECT_TYPES","DB_TYPES","PROJECT_TYPES_ARRAY","key","text","value","DB_TYPES_ARRAY","REGEX_CAMEL_CASE","REGEX_DASH_CASE","getNameError","name","projectType","test","getProjectNamePlaceholder","ProjectDetailsView","onChange","useState","error","placeholder","changed","nameInfo","setNameInfo","authorInfo","setAuthorInfo","descriptionInfo","setDescriptionInfo","useEffect","isValid","author","description","console","log","Form","Group","widths","Input","fluid","label","e","content","pointing","TextArea","memo","ExpressView","dataBaseType","setDataBaseType","dataBaseNameInfo","setDataBaseNameInfo","dataBaseName","Select","options","disabled","RNView","hasReactNavigation","setHasReactNavigation","hasRedux","setHasRedux","className","Field","Checkbox","toggle","checked","Home","type","setType","isLoading","setLoading","projectDetails","setProjectDetails","expressDetails","setExpressDetails","rnDetails","setRNDetails","fileName","setFileName","downloadFile","file","tempFileName","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateRandomId","element","document","createElement","href","window","URL","createObjectURL","Blob","download","body","appendChild","click","Header","as","image","logo","Container","onSubmit","data","dbType","dbName","Promise","resolve","reject","url","process","fetch","method","headers","JSON","stringify","then","res","catch","err","mainFile","getRNScriptFile","loading","Button","primary","color","Segment","inverted","Popup","on","pinned","trigger","onClick","navigator","clipboard","writeText","icon","Icon","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c877ea5d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.1e29a291.svg\";","export const PROJECT_TYPES = {\n  REACT_NATIVE: 'rn',\n  EXPRESS: 'express',\n};\n\nexport const DB_TYPES = {\n  NONE: 'none',\n  MONGO_DB: 'mongo',\n};\n\nexport const PROJECT_TYPES_ARRAY = [\n  {\n    key: PROJECT_TYPES.EXPRESS,\n    text: 'Express',\n    value: PROJECT_TYPES.EXPRESS,\n  },\n  {\n    key: PROJECT_TYPES.REACT_NATIVE,\n    text: 'React Native',\n    value: PROJECT_TYPES.REACT_NATIVE,\n  },\n];\n\nexport const DB_TYPES_ARRAY = [\n  {\n    key: DB_TYPES.NONE,\n    text: 'None',\n    value: DB_TYPES.NONE,\n  },\n  {\n    key: DB_TYPES.MONGO_DB,\n    text: 'MongoDB',\n    value: DB_TYPES.MONGO_DB,\n  },\n];\n\nexport const REGEX_CAMEL_CASE = /^[A-Z][a-zA-Z]*$/;\nexport const REGEX_DASH_CASE = /^[a-zA-Z-]*$/;\n","import { PROJECT_TYPES, REGEX_CAMEL_CASE, REGEX_DASH_CASE } from '../constants';\n\nexport const getNameError = (name, projectType) => {\n  if (!name) {\n    return 'Project name is required';\n  }\n\n  // Camel Case\n  if (projectType === PROJECT_TYPES.REACT_NATIVE) {\n    const isValid = REGEX_CAMEL_CASE.test(name);\n    if (!isValid) {\n      return 'Project name should be in valid Camel Case format. eg: ProjectName';\n    } else {\n      return null;\n    }\n  }\n\n  // Dash Case\n  const isValid = REGEX_DASH_CASE.test(name);\n  if (!isValid) {\n    return 'Project name should be in valid Dash Case format. eg: project-name';\n  } else {\n    return null;\n  }\n};\n\nexport const getProjectNamePlaceholder = (projectType) => {\n  if (projectType === PROJECT_TYPES.REACT_NATIVE) {\n    return 'MyAwesomeApp';\n  }\n  return 'my-awesome-app';\n};\n","import React, { useState, useEffect, memo } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { getNameError, getProjectNamePlaceholder } from '../utils';\n\nconst ProjectDetailsView = ({ projectType, onChange }) => {\n  const [nameInfo, setNameInfo] = useState({\n    value: '',\n    error: null,\n    placeholder: getProjectNamePlaceholder(projectType),\n    changed: false,\n  });\n\n  const [authorInfo, setAuthorInfo] = useState({\n    value: '',\n    error: null,\n  });\n\n  const [descriptionInfo, setDescriptionInfo] = useState({\n    value: '',\n    error: null,\n  });\n\n  useEffect(() => {\n    if (projectType) {\n      setNameInfo({\n        value: nameInfo.value,\n        error: nameInfo.changed\n          ? getNameError(nameInfo.value, projectType)\n          : null,\n        placeholder: getProjectNamePlaceholder(projectType),\n        changed: nameInfo.changed,\n      });\n    } else {\n      // resetting\n      setNameInfo({\n        value: '',\n        error: null,\n        placeholder: getProjectNamePlaceholder(projectType),\n        changed: false,\n      });\n      setAuthorInfo({\n        value: '',\n        error: null,\n      });\n      setDescriptionInfo({\n        value: '',\n        error: null,\n      });\n    }\n  }, [projectType]);\n\n  useEffect(() => {\n    const isValid =\n      !nameInfo.error && !authorInfo.error && !descriptionInfo.error;\n    onChange({\n      isValid,\n      name: nameInfo.value,\n      author: authorInfo.value,\n      description: descriptionInfo.value,\n    });\n  }, [nameInfo, authorInfo, descriptionInfo, onChange]);\n\n  const onChangeNameHandler = (e, { value }) => {\n    setNameInfo({\n      value,\n      error: nameInfo.changed ? getNameError(value, projectType) : null,\n      placeholder: nameInfo.placeholder,\n      changed: true,\n    });\n  };\n\n  const onChangeDescriptionHandler = (e, { value }) => {\n    const error = value ? null : 'Project Description is required';\n    setDescriptionInfo({ value, error });\n  };\n\n  const onChangeAuthorHandler = (e, { value }) => {\n    const error = value ? null : 'Author is required';\n    setAuthorInfo({ value, error });\n  };\n\n  console.log('RENDERED DETAILS VIEW');\n\n  return (\n    <>\n      <Form.Group widths=\"equal\">\n        <Form.Input\n          fluid\n          label=\"Project Name\"\n          placeholder={nameInfo.placeholder}\n          value={nameInfo.value}\n          onChange={onChangeNameHandler}\n          error={\n            nameInfo.error\n              ? {\n                  content: nameInfo.error,\n                  pointing: 'above',\n                }\n              : false\n          }\n        />\n        <Form.Input\n          fluid\n          label=\"Author\"\n          placeholder=\"John Doe\"\n          value={authorInfo.value}\n          onChange={onChangeAuthorHandler}\n          error={\n            authorInfo.error\n              ? {\n                  content: authorInfo.error,\n                  pointing: 'above',\n                }\n              : false\n          }\n        />\n      </Form.Group>\n      <Form.TextArea\n        label=\"Project Description\"\n        placeholder=\"Add a brief description about your project\"\n        value={descriptionInfo.value}\n        onChange={onChangeDescriptionHandler}\n        error={\n          descriptionInfo.error\n            ? {\n                content: descriptionInfo.error,\n                pointing: 'above',\n              }\n            : false\n        }\n      />\n    </>\n  );\n};\nProjectDetailsView.propTypes = {\n  projectType: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default memo(ProjectDetailsView);\n","import React, { useState, useEffect, memo } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { DB_TYPES_ARRAY } from '../constants';\n\nconst ExpressView = ({ onChange }) => {\n  const [dataBaseType, setDataBaseType] = useState('none');\n\n  const [dataBaseNameInfo, setDataBaseNameInfo] = useState({\n    value: '',\n    error: null,\n  });\n\n  useEffect(() => {\n    const isValid = !dataBaseNameInfo.error;\n    onChange({\n      isValid,\n      dataBaseType,\n      dataBaseName: dataBaseNameInfo.value,\n    });\n  }, [dataBaseType, dataBaseNameInfo, onChange]);\n\n  const onChangeDataBaseTypeHandler = (e, { value }) => {\n    setDataBaseType(value);\n  };\n\n  const onChangeDataBaseNameHandler = (e, { value }) => {\n    setDataBaseNameInfo({\n      value,\n      error: value ? null : 'Database name is required',\n    });\n  };\n\n  return (\n    <>\n      <Form.Group widths=\"equal\">\n        <Form.Select\n          fluid\n          label=\"Database\"\n          options={DB_TYPES_ARRAY}\n          value={dataBaseType}\n          onChange={onChangeDataBaseTypeHandler}\n        />\n        <Form.Input\n          disabled={dataBaseType === 'none'}\n          fluid\n          label=\"Database Name\"\n          placeholder=\"express-app-db\"\n          value={dataBaseNameInfo.value}\n          onChange={onChangeDataBaseNameHandler}\n          error={\n            dataBaseNameInfo.error\n              ? {\n                  content: dataBaseNameInfo.error,\n                  pointing: 'above',\n                }\n              : false\n          }\n        />\n      </Form.Group>\n    </>\n  );\n};\n\nExpressView.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport default memo(ExpressView);\n","import React, { useState, useEffect, memo } from 'react';\nimport { Checkbox, Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst RNView = ({ onChange }) => {\n  const [hasReactNavigation, setHasReactNavigation] = useState(false);\n  const [hasRedux, setHasRedux] = useState(false);\n\n  useEffect(() => {\n    onChange({\n      isValid: true,\n      hasReactNavigation,\n      hasRedux,\n    });\n  }, [onChange, hasReactNavigation, hasRedux]);\n\n  return (\n    <div>\n      <div className=\"grid grid-cols-5\">\n        <Form.Field>\n          <label>React Navigation</label>\n        </Form.Field>\n        <Checkbox\n          toggle\n          checked={hasReactNavigation}\n          onChange={(e, { checked }) => {\n            setHasReactNavigation(checked);\n          }}\n        />\n      </div>\n\n      <div className=\"grid grid-cols-5\">\n        <Form.Field>\n          <label>Redux</label>\n        </Form.Field>\n        <Checkbox\n          toggle\n          checked={hasRedux}\n          onChange={(e, { checked }) => {\n            setHasRedux(checked);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nRNView.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport default memo(RNView);\n","import React, { useState } from 'react';\nimport './index.css';\nimport logo from '../../assets/images/logo.svg';\nimport {\n  Header,\n  Container,\n  Button,\n  Form,\n  Segment,\n  Icon,\n  Popup,\n} from 'semantic-ui-react';\nimport { generateRandomId } from '../../utils';\nimport { PROJECT_TYPES, PROJECT_TYPES_ARRAY } from './constants';\nimport ProjectDetailsView from './views/ProjectDetailsView';\nimport ExpressView from './views/ExpressView';\nimport RNView from './views/RNView';\nimport { getExpressScriptFile, getRNScriptFile } from '../../services';\n\nfunction Home() {\n  const [type, setType] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n\n  const [projectDetails, setProjectDetails] = useState({\n    isValid: false,\n    name: '',\n    author: '',\n    description: '',\n  });\n\n  const [expressDetails, setExpressDetails] = useState({\n    isValid: false,\n    dataBaseType: 'none',\n    dataBaseName: '',\n  });\n\n  const [rnDetails, setRNDetails] = useState({\n    isValid: false,\n    hasReactNavigation: false,\n    hasRedux: false,\n  });\n\n  const [fileName, setFileName] = useState(null);\n\n  const buttonClickHandler = () => {\n    if (!projectDetails.isValid) {\n      return;\n    }\n    setLoading(true);\n\n    let data;\n    switch (type) {\n      case PROJECT_TYPES.EXPRESS:\n        if (!expressDetails.isValid) {\n          return;\n        }\n\n        data = {\n          name: projectDetails.name,\n          author: projectDetails.author,\n          description: projectDetails.description,\n          dbType: expressDetails.dataBaseType,\n          dbName: expressDetails.dataBaseName,\n        };\n        getExpressScriptFile(data)\n          .then((mainFile) => {\n            downloadFile(mainFile);\n            setType(null);\n            setLoading(false);\n          })\n          .catch((err) => {\n            setLoading(false);\n          });\n        break;\n\n      case PROJECT_TYPES.REACT_NATIVE:\n        if (!rnDetails.isValid) {\n          return;\n        }\n\n        data = {\n          name: projectDetails.name,\n          author: projectDetails.author,\n          description: projectDetails.description,\n          hasReactNavigation: rnDetails.hasReactNavigation,\n          hasRedux: rnDetails.hasRedux,\n        };\n        getRNScriptFile(data)\n          .then((mainFile) => {\n            downloadFile(mainFile);\n            setType(null);\n            setLoading(false);\n          })\n          .catch((err) => {\n            setLoading(false);\n          });\n        break;\n\n      default:\n        setLoading(false);\n        break;\n    }\n  };\n\n  const downloadFile = (file) => {\n    const tempFileName = generateRandomId(6);\n    setFileName(tempFileName);\n    const element = document.createElement('a');\n    element.href = window.URL.createObjectURL(new Blob([file]));\n    element.download = `${tempFileName}.js`;\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  const onChangeProjectTypeHandler = (e, { value }) => {\n    setFileName(null);\n    setType(value);\n  };\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <Header as=\"h2\" image={logo} content=\"JS Project Wizard\" />\n      </header>\n      <div className=\"left-content\"></div>\n      <main className=\"content\">\n        <Container>\n          <Form onSubmit={buttonClickHandler} loading={isLoading}>\n            <Form.Select\n              fluid\n              label=\"Project Type\"\n              options={PROJECT_TYPES_ARRAY}\n              value={type}\n              onChange={onChangeProjectTypeHandler}\n            />\n            {type && (\n              <>\n                <ProjectDetailsView\n                  projectType={type}\n                  onChange={setProjectDetails}\n                />\n                {type === PROJECT_TYPES.EXPRESS ? (\n                  <ExpressView onChange={setExpressDetails} />\n                ) : (\n                  <RNView onChange={setRNDetails} />\n                )}\n                <Form.Button className=\"my-3\" primary>\n                  Generate Project\n                </Form.Button>\n              </>\n            )}\n          </Form>\n          {fileName && (\n            <>\n              <Header as=\"h5\" color={'green'}>\n                Generation complete. Create a new folder, move the downloaded\n                file into the folder and run the following command on a terminal\n                inside of that folder\n              </Header>\n\n              <Segment\n                className=\"flex justify-between items-center mt-3 font-mono\"\n                inverted\n              >\n                npm i async && node {fileName}.js\n                <Popup\n                  content=\"Copied!\"\n                  on=\"click\"\n                  pinned\n                  trigger={\n                    <Button\n                      onClick={() => {\n                        navigator.clipboard.writeText(\n                          `npm i async && node ${fileName}.js`\n                        );\n                      }}\n                      icon\n                    >\n                      <Icon name=\"copy\" />\n                    </Button>\n                  }\n                />\n              </Segment>\n            </>\n          )}\n        </Container>\n      </main>\n      <div className=\"right-content\"></div>\n      <footer className=\"footer\"></footer>\n    </div>\n  );\n}\n\nexport default Home;\n","export const generateRandomId = (length) => {\n  var result = '';\n  var characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport function addParamsToURL(url, params) {\n  if (params && Object.entries(params).length !== 0 && params.constructor === Object) {\n      let temp = url;\n      let count = 0;\n      for (let [key, value] of Object.entries(params)) {\n          const valEncoded = encodeURIComponent(value);\n          temp = temp + `${count === 0 ? '?' : '&'}${key}=${valEncoded}`;\n          count++;\n      }\n      return temp;\n  }\n  return url;\n}\n","export const getExpressScriptFile = (body) => {\n  return new Promise((resolve, reject) => {\n    let url = `${process.env.REACT_APP_BASE_URL}/express`;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    })\n      .then((res) => {\n        res.text().then((text) => {\n          resolve(text);\n        });\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const getRNScriptFile = (body) => {\n  console.log(body)\n  return new Promise((resolve, reject) => {\n    let url = `${process.env.REACT_APP_BASE_URL}/react-native`;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    })\n      .then((res) => {\n        res.text().then((text) => {\n          resolve(text);\n        });\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './containers/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/js-project-wizard/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}