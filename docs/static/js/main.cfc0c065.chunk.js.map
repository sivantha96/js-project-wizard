{"version":3,"sources":["assets/images/logo.svg","scripts/express/index.js","utils/index.js","containers/Home/index.js","App.js","index.js"],"names":["getExpressScriptFile","params","Promise","resolve","reject","url","process","Object","entries","length","constructor","temp","count","key","value","valEncoded","encodeURIComponent","addParamsToURL","fetch","then","res","text","catch","err","Home","useState","type","setType","name","setName","author","setAuthor","description","setDescription","isLoading","setLoading","dbType","setDbType","dbName","setDbName","nameError","setNameError","authorError","setAuthorError","descriptionError","setDescriptionError","dbNameError","setDbNameError","fileName","setFileName","className","Header","as","image","logo","content","Container","Form","onSubmit","mainFile","tempFileName","result","characters","charactersLength","i","charAt","Math","floor","random","generateRandomId","element","document","createElement","href","window","URL","createObjectURL","Blob","download","body","appendChild","click","loading","Select","fluid","label","options","onChange","e","Group","widths","Input","placeholder","error","pointing","TextArea","disabled","Button","primary","color","Segment","inverted","Popup","on","pinned","trigger","onClick","navigator","clipboard","writeText","icon","Icon","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cfc0c065.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.1e29a291.svg\";","import { addParamsToURL } from '../../utils';\n\nconst getExpressScriptFile = (params) => {\n  return new Promise((resolve, reject) => {\n    let url = `${process.env.REACT_APP_BASE_URL}/express`;\n    url = addParamsToURL(url, params);\n    fetch(url)\n      .then((res) => {\n        res.text().then((text) => {\n          resolve(text);\n        });\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport default getExpressScriptFile;\n","export const generateRandomId = (length) => {\n  var result = '';\n  var characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport function addParamsToURL(url, params) {\n  if (params && Object.entries(params).length !== 0 && params.constructor === Object) {\n      let temp = url;\n      let count = 0;\n      for (let [key, value] of Object.entries(params)) {\n          const valEncoded = encodeURIComponent(value);\n          temp = temp + `${count === 0 ? '?' : '&'}${key}=${valEncoded}`;\n          count++;\n      }\n      return temp;\n  }\n  return url;\n}\n","import React, { useState } from 'react';\nimport './index.css';\nimport logo from '../../assets/images/logo.svg';\nimport {\n  Header,\n  Container,\n  Button,\n  Form,\n  Segment,\n  Icon,\n  Popup,\n} from 'semantic-ui-react';\nimport getExpressScriptFile from '../../scripts/express';\nimport { generateRandomId } from '../../utils';\n\nfunction Home() {\n  const [type, setType] = useState('express');\n  const [name, setName] = useState('');\n  const [author, setAuthor] = useState('');\n  const [description, setDescription] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [dbType, setDbType] = useState('none');\n  const [dbName, setDbName] = useState('');\n\n  const [nameError, setNameError] = useState(false);\n  const [authorError, setAuthorError] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(false);\n  const [dbNameError, setDbNameError] = useState(false);\n\n  const [fileName, setFileName] = useState(null);\n\n  const buttonClickHandler = () => {\n    setFileName(null);\n    setNameError(false);\n    setAuthorError(false);\n    setDescriptionError(false);\n    setDbNameError(false);\n\n    if (!name) {\n      setNameError(true);\n    }\n    if (!author) {\n      setAuthorError(true);\n    }\n    if (!description) {\n      setDescriptionError(true);\n    }\n    if (!dbName) {\n      setDbNameError(true);\n    }\n\n    if (nameError || authorError || descriptionError || dbNameError) {\n      return null;\n    }\n\n    setLoading(true);\n    const params = {\n      name,\n      description,\n      author,\n      dbType,\n      dbName,\n    };\n    getExpressScriptFile(params)\n      .then((mainFile) => {\n        const tempFileName = generateRandomId(6);\n        setFileName(tempFileName);\n        const element = document.createElement('a');\n        element.href = window.URL.createObjectURL(new Blob([mainFile]));\n        element.download = `${tempFileName}.js`;\n        document.body.appendChild(element);\n        element.click();\n        setName('');\n        setAuthor('');\n        setDescription('');\n        setDbType('none');\n        dbName('');\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n\n  const projectTypes = [{ key: 'express', text: 'Express', value: 'express' }];\n  const dbTypes = [\n    { key: 'none', text: 'None', value: 'none' },\n    { key: 'mongo', text: 'MongoDB', value: 'mongo' },\n  ];\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <Header as=\"h2\" image={logo} content=\"JS Project Wizard\" />\n      </header>\n      <div className=\"left-content\"></div>\n      <main className=\"content\">\n        <Container>\n          <Form onSubmit={buttonClickHandler} loading={isLoading}>\n            <Form.Select\n              fluid\n              label=\"Project Type\"\n              options={projectTypes}\n              value={type}\n              onChange={(e, { value }) => {\n                setType(value);\n              }}\n            />\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"Project Name\"\n                placeholder=\"express-app\"\n                value={name}\n                onChange={(e, { value }) => {\n                  setName(value);\n                }}\n                error={\n                  nameError\n                    ? {\n                        content: 'Please enter a project name',\n                        pointing: 'above',\n                      }\n                    : false\n                }\n              />\n              <Form.Input\n                fluid\n                label=\"Author\"\n                placeholder=\"John Doe\"\n                value={author}\n                onChange={(e, { value }) => {\n                  setAuthor(value);\n                }}\n                error={\n                  authorError\n                    ? {\n                        content: 'Please enter the author name',\n                        pointing: 'above',\n                      }\n                    : false\n                }\n              />\n            </Form.Group>\n            <Form.TextArea\n              label=\"Project Description\"\n              placeholder=\"Add a brief description about your project\"\n              value={description}\n              onChange={(e, { value }) => {\n                setDescription(value);\n              }}\n              error={\n                descriptionError\n                  ? {\n                      content: 'Please enter a description',\n                      pointing: 'above',\n                    }\n                  : false\n              }\n            />\n            <Form.Group widths=\"equal\">\n              <Form.Select\n                fluid\n                label=\"Database\"\n                options={dbTypes}\n                value={dbType}\n                onChange={(e, { value }) => {\n                  setDbType(value);\n                }}\n              />\n              <Form.Input\n                disabled={dbType === 'none'}\n                fluid\n                label=\"Database Name\"\n                placeholder=\"express-app-db\"\n                value={dbName}\n                onChange={(e, { value }) => {\n                  setDbName(value);\n                }}\n                error={\n                  dbNameError\n                    ? {\n                        content: 'Please enter the database name',\n                        pointing: 'above',\n                      }\n                    : false\n                }\n              />\n            </Form.Group>\n            <Form.Button className=\"my-3\" primary>\n              Generate Project\n            </Form.Button>\n          </Form>\n          {fileName && (\n            <>\n              <Header as=\"h5\" color={'green'}>\n                Generation complete. Create a new folder, move the downloaded\n                file into the folder and run the following command on a terminal\n                inside of that folder\n              </Header>\n\n              <Segment\n                className=\"flex justify-between items-center mt-3 font-mono\"\n                inverted\n              >\n                npm i async && node {fileName}.js\n                <Popup\n                  content=\"Copied!\"\n                  on=\"click\"\n                  pinned\n                  trigger={\n                    <Button\n                      onClick={() => {\n                        navigator.clipboard.writeText(\n                          `npm i async && node ${fileName}.js`\n                        );\n                      }}\n                      icon\n                    >\n                      <Icon name=\"copy\" />\n                    </Button>\n                  }\n                />\n              </Segment>\n            </>\n          )}\n        </Container>\n      </main>\n      <div className=\"right-content\"></div>\n      <footer className=\"footer\"></footer>\n    </div>\n  );\n}\n\nexport default Home;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './containers/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/js-project-wizard/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}